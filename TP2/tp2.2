#!/usr/sbin/dtrace -qs

#pragma D option quiet
#pragma D option destructive
#pragma D option defaultargs

BEGIN
{
	period = ($1 > 0) ? $1 : 5;
	seconds = period;
}


syscall::openat:entry
{
	self->execname = execname;
	self->pid = pid;
	self->file = arg1;
	self->flags = arg2;
}


syscall::openat:return
/ arg0 >= 0/
{
	@Success[pid, execname] = count();	
}
syscall::openat:return
/(self->flags & 1) && (self->flags & 256) && ( self->flags & 512)/
{

	@Create[pid, execname] = count();
	
}
syscall::openat:return
/ !((self->flags & 1) && (self->flags & 256) && (self->flags & 512))/
{

	@Open[pid, execname] = count();
	
}

syscall::openat:return
{	
	self->execname = 0;
	self->pid = 0;
	self->file = 0;
	self->flags = 0;
}

profile:::tick-1sec
/seconds != 0/
{
	seconds = seconds -1 ;
}
profile:::tick-1sec
/seconds == 0/
{
	seconds = period;
	printf("--------------------------------------------\n");
	system("date");
	printf("Tentativas de criação de um ficheiro:\n");
	printa(@Create);
   	trunc(@Create);
	printf("Tentativas de abrir um ficheiro existente:\n");
	printa(@Open);
   	trunc(@Open);
	printf("Sucessos:\n");
	printa(@Success);
   	trunc(@Success);
}


